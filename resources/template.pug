- var urlArr = url.split('/')
- var path = { from: urlArr[1] }
- if (urlArr.length > 2) path.to = urlArr[2]
html(lang="en")
  mixin time(scheduled, estimated)
    if estimated === 'On time'
      = scheduled
    else
      del= scheduled
    = ' (' + estimated + ')'

  mixin serviceDetails(service, fromStation, toStation, departed)
    br
    strong
      +time(service.std, service.etd)
      = ' to ' + service.destinationStation.stationName
    br
    = 'Platform ' + (service.platform ? service.platform : 'unavailable')
    br
    = service.operator
    // Display arrival details if toStation is provided, regardless of departed status
    if toStation
      br
      = 'Arrives at ' + (service.arrivalStation ? service.arrivalStation : toStation.stationName) + ' at '
      strong
        +time(service.sta, service.eta)
      if service.time
        = ', ' + service.time
    br
    br

  // Add 'departed' parameter
  // Add a class if the 'departed' flag is true
  mixin services(header, serviceArray, fromStation, toStation, departed)
    hr
    br
    strong= header
    br
    each service in serviceArray
      // Add a class if the 'departed' flag is true
      div(class={g: service.etd == 'Cancelled', departed: departed})
        // Pass the 'departed' flag down to serviceDetails
        +serviceDetails(service, fromStation, toStation, departed) // <-- ADD departed parameter here

  head
    include head.pug
  body
    include header.pug
    if (errorMessage)
      p.e= errorMessage
    if (departureObject)
      p
        strong= 'Departure board for ' + departureObject.fromStation.stationName + ' (' + departureObject.fromStation.stationCode + ')' + (departureObject.toStation ? (' calling at ' + departureObject.toStation.stationName + ' (' + departureObject.toStation.stationCode + ')') : '')
      if toStation != undefined && fromStation != undefined
        p
          a(href='/'+toStation+'/'+fromStation) Switch Direction
      if didYouMean && didYouMean.from &&didYouMean.from.length > 0
        p
          - var clearUrl = '/' + departureObject.fromStation.stationCode
          - if (path.to) clearUrl += '/' + path.to
          a(href=clearUrl) &times;
          =' Did you mean from '
          each station in didYouMean.from
            - var newUrl = '/'+station.stationCode
            - if (departureObject.toStation) newUrl += '/' + path.to
            a(href=newUrl)= station.stationName
            = '? '
      if didYouMean && didYouMean.to &&didYouMean.to.length > 0
        p
          - var clearUrl = '/' + path.from + '/' + departureObject.toStation.stationCode
          a(href=clearUrl) &times;
          = ' Did you mean to '
          each station in didYouMean.to
            a(href='/'+path.from +'/'+ station.stationCode)= station.stationName
            = '? '
      if departureObject.nrccMessages
        each message in departureObject.nrccMessages
          p.e!= message
      if ((departureObject.upcomingTrainServices ? departureObject.upcomingTrainServices.length : 0) + (departureObject.recentlyDepartedServices ? departureObject.recentlyDepartedServices.length : 0) + (departureObject.busServices ? departureObject.busServices.length : 0) === 0)
        p No services found. Trntxt only gives information for direct services.

      // Recently Departed Trains
      if departureObject.recentlyDepartedServices && departureObject.recentlyDepartedServices.length > 0
        +services('Recently Departed Trains', departureObject.recentlyDepartedServices, departureObject.fromStation, departureObject.toStation, true) // Pass true for departed

      // Upcoming Trains
      if departureObject.upcomingTrainServices && departureObject.upcomingTrainServices.length > 0
        +services('Upcoming Train services', departureObject.upcomingTrainServices, departureObject.fromStation, departureObject.toStation, false) // Pass false for departed

      // Bus Services
      if departureObject.busServices && departureObject.busServices.length > 0
        +services('Bus services',departureObject.busServices, departureObject.fromStation, departureObject.toStation, false) // Pass false for departed

    hr
    include form.pug
    include footer.pug
